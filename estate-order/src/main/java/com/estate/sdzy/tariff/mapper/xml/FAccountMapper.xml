<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.estate.sdzy.tariff.mapper.FAccountMapper">
    <select id="listAccount" resultType="com.estate.sdzy.tariff.entity.FAccount">
        select a.id,a.comp_id,a.comm_id,o.id as ownerId,comp.name as compName,comm.name as commName,o.name as ownerName,o.tel as ownerTel,
        a.name,a.no,a.fee,a.created_name,a.created_at,a.modified_at,a.modified_name
        from
        f_account a,f_account_cost_item item,s_company comp,r_community comm,r_owner o
        <if test="userId!='' and userId!=null">
            ,s_user_comm uc
        </if>
        where a.comp_id=comp.id and a.comm_id=comm.id and item.account_id=a.id and a.owner_id=o.id
        <if test="map.compId != '' and map.compId != null">
            and a.comp_id = #{map.compId}
        </if>
        <if test="map.commId != '' and map.commId != null">
            and a.comm_id = #{map.commId}
        </if>
        <if test="map.ownerName!='' and map.ownerName!=null">
            and o.ownerName like CONCAT('%',#{map.ownerName},'%')
        </if>
        <if test="map.propertyName!='' and map.propertyName!=null">
            item.property_id in (select m.property_id from f_account_cost_item item,v_f_meter m where item.property_id=m.property_id
            and m.propertyName like CONCAT('%',#{map.propertyName},'%'))
        </if>
        <if test="map.name!='' and map.name!=null">
            and a.name like CONCAT('%',#{map.name},'%')
        </if>
        <if test="map.no!='' and map.no!=null">
            and a.no like CONCAT('%',#{map.no},'%')
        </if>
        <if test="userId!='' and userId!=null">
            and uc.user_id=#{userId} and a.comm_id=uc.comm_id
        </if>
    </select>

    <select id="getAccount" resultType="com.estate.sdzy.tariff.entity.FAccount">
        select a.id,a.name,a.type,a.no,a.fee,a.remark,a.created_at,a.created_name
        from f_account a,f_account_cost_item i,r_owner o
        where a.id=i.account_id and a.owner_id=o.id and i.rule_id=#{ruleId} and o.id=#{ownerId}
    </select>

    <select id="getMaxNo" resultType="java.lang.Long">
        select max(no) from f_account
    </select>
</mapper>
